### OPEN FOR
DO $$
DECLARE
    -- Объявление курсорной переменной (не связана с курсором)
    users_cursor refcursor;
BEGIN
    -- Открытие курсорной переменной
    OPEN users_cursor NO SCROLL
    FOR SELECT * FROM public.list_users;
   
    -- Произвольный код
    ...
END $$;

### OPEN FOR EXECUTE
DO $$
DECLARE
    -- Объявление курсорной переменной (не связана с курсором)
    users_cursor refcursor;
BEGIN
    -- Открытие курсорной переменной
    OPEN users_cursor NO SCROLL
    FOR EXECUTE 'SELECT * FROM public.list_users WHERE id_group = $1 AND status = $2;'
    USING 1, True;
   
    -- Произвольный код
    ...
END $$;

### С параметрами без прокрутки
DO $$
DECLARE
    -- Объявление курсора
    users_cursor NO SCROLL
    CURSOR (p_id_group int2, p_status boolean)
    FOR SELECT * from public.list_users WHERE id_group = p_id_group AND status = p_status;

BEGIN
    -- Открытие курсорной переменной
    OPEN users_cursor (p_id_group := 1, p_status := True);

    -- Произвольный код
    ...
END $$;

### Запись конкретной строки из запроса в переменную ROWTYPE через FETCH
DO $$
DECLARE
    -- Объявление курсорной переменной (не связана с курсором)
    users_cursor refcursor;
    -- Объявление переменной типа строки
    users_row public.list_users%ROWTYPE;
BEGIN
    -- Открытие курсорной переменной
    OPEN users_cursor NO SCROLL
    FOR SELECT * FROM public.list_users;

        -- Получение данных из курсора
        FETCH ABSOLUTE 2 FROM users_cursor
        INTO users_row;

        -- Вывод значения переменной
        RAISE NOTICE '%', users_row;

    -- Закрытие курсора
    CLOSE users_cursor;
END $$;

### Запись конкретной строки из запроса в переменную ROWTYPE через FETCH и именованные аргументы
DO $$
DECLARE
    -- Объявление курсора
    users_cursor NO SCROLL
    CURSOR (p_id_group int2, p_status boolean)
    FOR SELECT * from public.list_users WHERE id_group = p_id_group AND status = p_status;
    -- Объявление переменной типа строки
    users_row public.list_users%ROWTYPE;
BEGIN
    -- Открытие курсорной переменной
    OPEN users_cursor (p_id_group := 1, p_status := True);

        -- Получение данных из курсора
        FETCH NEXT FROM users_cursor
        INTO users_row;

        -- Вывод значения переменной
        RAISE NOTICE '%', users_row;

    -- Закрытие курсора
    CLOSE users_cursor;
END $$;

### Пример использования MOVE
DO $$
DECLARE
    -- Объявление курсорной переменной (не связана с курсором)
    users_cursor refcursor;
    -- Объявление переменной типа строки
    users_row public.list_users%ROWTYPE;
BEGIN
    -- Открытие курсорной переменной
    OPEN users_cursor NO SCROLL
    FOR SELECT * FROM public.list_users;
   
        -- Перемещение курсора на 2 строку
        MOVE ABSOLUTE 2 FROM users_cursor;

        -- Получение 3 строки из курсора
        FETCH NEXT FROM users_cursor
        INTO users_row;

        -- Вывод значения переменной
        RAISE NOTICE '%', users_row;

    -- Закрытие курсора
    CLOSE users_cursor;
END $$;

### Можно несколько раз перемещаться с помощью MOVE, потому что указано SCROLL
DO $$
DECLARE
    -- Объявление курсора
    users_cursor SCROLL CURSOR
    FOR SELECT * FROM public.list_users ORDER BY id ASC;
    -- Объявление переменной типа строки
    users_row public.list_users%ROWTYPE;
BEGIN
    -- Открытие курсорной переменной
    OPEN users_cursor;

        -- Перемещение курсора на 7 строку
        MOVE ABSOLUTE 7 FROM users_cursor;

        -- Получение 8 строки из курсора (последней строки)
        FETCH NEXT FROM users_cursor
        INTO users_row;

        -- Вывод значения переменной
        RAISE NOTICE '%', users_row;
       
        -- Перемещение курсора перед 1 строкой
        MOVE ABSOLUTE 0 FROM users_cursor;

        -- Получение 1 строки из курсора
        FETCH NEXT FROM users_cursor
        INTO users_row;

        -- Вывод значения переменной
        RAISE NOTICE '%', users_row;

    -- Закрытие курсора
    CLOSE users_cursor;
END $$;


### Получение нескольких строк в контексте обычного SQL
-- Начало транзакции
BEGIN;

-- Объявление курсора
DECLARE users_cursor NO SCROLL
CURSOR FOR SELECT * FROM public.list_users;

    -- Перемещение курсора на 2 строку
    MOVE ABSOLUTE 2 FROM users_cursor;

    -- Получение 3 и 4 строки из курсора
    FETCH FORWARD 2 FROM users_cursor;

-- Закрытие курсора
CLOSE users_cursor;

-- Завершаем транзакцию и фиксируем изменения
COMMIT;

### Пример обновления данных с помощью WHERE CURRENT OF. DELETE работает аналогично
DO $$
DECLARE
    -- Объявление курсора
    users_cursor NO SCROLL
    CURSOR (p_id_group int2, p_status boolean)
    FOR SELECT * from public.list_users WHERE id_group = p_id_group AND status = p_status FOR UPDATE;
BEGIN
    -- Открытие курсорной переменной
    OPEN users_cursor (p_id_group := 1, p_status := True);
   
        -- Перемещение курсора на 2 строку
        MOVE ABSOLUTE 2 FROM users_cursor;

        -- Обновление текущей строки
        UPDATE public.list_users
        SET status = FALSE
        WHERE CURRENT OF users_cursor;

    -- Закрытие курсора
    CLOSE users_cursor;
END $$;

### Использование FOUND для проверки наличия строк в переменной
DO $$
DECLARE
    -- Объявление курсора
    users_cursor NO SCROLL CURSOR
    FOR SELECT * FROM public.list_users WHERE id_group = 2;
    -- Объявление переменной типа строки
    users_row public.list_users%ROWTYPE;
BEGIN
    -- Открываем курсор
    OPEN users_cursor;

        -- Извлекаем первую строку из курсора
        FETCH FIRST FROM users_cursor INTO users_row;

        -- Проверка результатов
        IF FOUND THEN
            RAISE NOTICE '%', users_row;
        ELSE
            RAISE NOTICE 'Курсор вернул 0 строк.';
        END IF;

    -- Закрываем курсор
    CLOSE users_cursor;
END $$;


### Цикл внутри курсора, открытие и закрытие происходит автоматически
DO $$
DECLARE
    -- Объявление курсора
    users_cursor NO SCROLL CURSOR
    FOR SELECT * FROM public.list_users;
BEGIN
	-- Чтение курсора в цикле
	FOR users_row IN users_cursor
	LOOP
		-- Вывод значения переменной
		RAISE NOTICE '%', users_row;
	END LOOP;
END $$;

### С параметрами и обращению к элементам record
DO $$
DECLARE
    -- Объявление курсора
    users_cursor NO SCROLL
    CURSOR (p_id_group int2, p_status boolean)
    FOR SELECT * FROM public.list_users WHERE id_group = p_id_group AND status = p_status;
BEGIN
	-- Чтение курсора в цикле
	FOR users_row IN users_cursor (p_id_group := 2, p_status := true)
	LOOP
		-- Вывод значений переменной
		RAISE NOTICE 'id: %, Имя: %, Фамилия: %', users_row.id, users_row.first_name, users_row.last_name;
	END LOOP;
END $$;
